version: 2.1

executors:
  base:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project

commands:
  install-tools:
    steps:
      - run:
          name: Install Terraform and gcloud
          command: |
            TERRAFORM_VERSION=1.12.2
            curl -fsSL "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -o terraform.zip
            unzip -o terraform.zip -d tf-bin
            sudo mv tf-bin/terraform /usr/local/bin/
            terraform version

            export CLOUDSDK_CORE_DISABLE_PROMPTS=1
            export CLOUDSDK_INSTALL_DIR=$HOME
            curl -sSL https://sdk.cloud.google.com | bash
            source "$HOME/google-cloud-sdk/path.bash.inc"
            echo 'source "$HOME/google-cloud-sdk/path.bash.inc"' >> $BASH_ENV
            gcloud version

jobs:
  run-migrations:
    executor: base
    environment:
      DB_PORT: 5432
      TF_VAR_db_pass: postgres123
    steps:
      - checkout
      - install-tools

      - run:
          name: Authenticate GCP
          command: |
            echo "$GCLOUD_SERVICE_KEY" > creds.json
            gcloud auth activate-service-account --key-file=creds.json
            gcloud config set project "$GCP_PROJECT_ID"

      - run:
          name: Generate random instance name
          command: |
            RAND_ID=$(LC_CTYPE=C tr -dc 'a-z0-9' </dev/urandom | head -c 6)
            export INSTANCE_NAME="sql-${CIRCLE_BRANCH//[^a-zA-Z0-9]/}-${RAND_ID}"
            echo "export INSTANCE_NAME=$INSTANCE_NAME" >> $BASH_ENV
            echo "Generated instance name: $INSTANCE_NAME"

      - run:
          name: Provision Cloud SQL with Terraform
          command: |
            source $BASH_ENV
            cd terraform
            terraform init
            terraform apply -auto-approve \
              -var="instance_name=$INSTANCE_NAME" \
              -var="project_id=$GCP_PROJECT_ID" \
              -var="region=$GCP_REGION" \
              -var="db_user=postgres" \
              -var="db_pass=$TF_VAR_db_pass" \
              -var="db_name=devdb" \
              -var="gcp_credentials_json=$GCLOUD_SERVICE_KEY"

      - run:
          name: Extract DB Info
          command: |
            cd terraform
            terraform output -raw db_public_ip > ../DB_HOST
            echo "postgres" > ../DB_USER
            echo "devdb" > ../DB_NAME

      - run:
          name: Install golang-migrate
          command: |
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz -o migrate.tar.gz
            tar -xzf migrate.tar.gz
            sudo mv migrate /usr/local/bin/migrate
            migrate -version

      - run:
          name: Run DB Migrations
          command: |
            DB_HOST=$(cat DB_HOST)
            DB_USER=$(cat DB_USER)
            DB_NAME=$(cat DB_NAME)

            echo "Connecting to DB at $DB_HOST"
            migrate -verbose -path db/migrations -database "postgres://${DB_USER}:${TF_VAR_db_pass}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable" up

workflows:
  version: 2
  cloudsql-dev:
    jobs:
      - run-migrations:
          filters:
            branches:
              only: /^feature\/.*/
